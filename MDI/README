(copied from email from Paul Kirk, 5/1/12)
(edited by Paul Kirk, 22/01/12)

> The file MDISim.m provides an example, and can be run by typing MDISim(2) in 
> Matlab [the 2 is arbitrary - you can choose any number - it just means that 
> MDISim(2) and MDISim(3), for example, produce output files with different 
> names. This makes running on Minerva easier!].
>
> MDISim.pbs and MDISim.sh are for running the code on Minerva.
>
> MDI.m is the file that does all of the hard work.
>
> The inputs to MDI are as follows:
>
> outputDir - the directory into which output will be written.  Set to be '' (an
> empty string) if you want output to be written into the current directory
> nComponents - the maximum permitted number of components in the mixture model 
> (I have been setting this to be nGenes/2 in most cases)
> nSamples - the number of Gibbs sampling iterations to perform
> fileNames - a cell array of length nDatasets containing the names of the CSV 
> data files
> dataTypes - a cell array of length nDatasets whose ith entry specifies the 
> data type of the ith dataset. Current accepted data types are: 
> 'TimeCourseUnequalSpacing', 'Multinomial', and 'BagOfWords'
> (TimeCourseUnequalSpacing specifies a GP model for time course data. 
> Multinomial and BagOfWords are for binary data matrices. My current thoughts 
> are that Multinomial is to be preferred, although it does run more slowly.)
> hyperSamplingFrequency - if this is set to q, then we only update the GP 
> hyperparameters every qth Gibbs sampling iteration.
> samplingFrequency - if this is set to q, then we only save down the samples 
> generated by every qth Gibbs sampling iteration.
> initialise - should be set to true if we have not previously generated output 
> (if set to false, the program will look for the output generated the previous 
> time the program was run, and will continue Gibbs sampling from the saved state).
>
> The outputs of the program are:
> 1) a .mat file that saves the initial seeds used for random number generation 
> (this is really just for debugging, so can be safely ignored)
> 2) a CSV file that contains the sampled values. Let K=nDatasets. The first K 
> columns provide the sampled values for the K mass parameters associated with 
> each Dirichlet prior. The next K(K-1)/2 columns provide the "phi" (dataset 
> association) parameters. These are in the order phi_{1,2}, phi_{1,3}, ..., 
> phi_{1,K}, phi_{2,3}, phi_{2, 4}, ... and so on. The next p columns provide 
> the component allocation labels for the p genes in Dataset 1. The next p 
> columns contain the component allocation labels for the p genes in Dataset 2. 
> ... and so on. Currently, I do not save down the sampled hyperparameter 
> values, just because to do so would come with associated file I/O expense, and 
> would make the resulting CSV files even bigger!
> 3) a .mat file which saves down the current state of the sampler, so that we 
> may restart it at a later point (by setting initialise = false when running MDI).
>
> I think that the attached provides everything you need. If things do not work, 
> let me know - I might have missed out a file. Also, if you want me to run 
> through or explain any of the above, let me know.
>
> Also, I should point out that there is an initial computational cost 
> associated with building some index matrices. So, it might take a little while 
> to get going before any output is generated.
>
> Cheers,
>
> Paul
>
